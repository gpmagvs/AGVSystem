{"version":3,"file":"js/941.62239dff.js","mappings":"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","sources":["webpack://gpm_agvs/./src/views/RacksStatusView.vue","webpack://gpm_agvs/./src/components/RacksStatusView/RackStatus.vue","webpack://gpm_agvs/./src/components/RacksStatusView/RackPort.vue","webpack://gpm_agvs/./src/components/RacksStatusView/RackPort.vue?7be1","webpack://gpm_agvs/./src/components/RacksStatusView/RackStatus.vue?5135","webpack://gpm_agvs/./src/views/RacksStatusView.vue?4ad2"],"sourcesContent":["<template>\r\n  <div class=\"rack-status-view custom-tabs-head p-1\">\r\n    <div class=\"display-mode-container text-start border-bottom my-1 py-1\">\r\n      <span class=\"px-2 text-primary\">\r\n        <b>顯示方式</b>\r\n      </span>\r\n      <el-select class=\"mx-2\" v-model=\"display\" style=\"width:120px\">\r\n        <el-option label=\"分頁顯示\" value=\"tabs\"></el-option>\r\n        <el-option label=\"單頁顯示\" value=\"div\"></el-option>\r\n      </el-select>\r\n    </div>\r\n    <!-- {{ GroupedWipData }} -->\r\n    <b-tabs v-if=\"display=='tabs'\">\r\n      <b-tab v-for=\"zone in GroupedWipData\" :key=\"zone.zoneName\">\r\n        <template #title>\r\n          <span>{{zone.zoneName}}</span>\r\n          <el-badge class=\"mx-2\" type=\"warning\" :value=\"IsHasDataButNoCargo(zone.zoneName)?'!':''\"></el-badge>\r\n        </template>\r\n        <div class=\"d-flex flex-row\">\r\n          <b>{{ $t('Rack.Cargo_Spaces') }}</b>\r\n          <div class=\"flex-fill p-2\">\r\n            <el-progress\r\n              :stroke-width=\"18\"\r\n              :percentage=\"zone.level\"\r\n              text-inside\r\n              striped\r\n              striped-flow\r\n              :duration=\"500\"\r\n            >\r\n              <span>{{ zone.hasCstPortNum }}/{{ zone.totalPorts }}</span>\r\n            </el-progress>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex flex-row flex-no-wrap w-100 overflow-auto\">\r\n          <div v-for=\"Rack in zone.zones\" :key=\"Rack.WIPName\">\r\n            <RackStatus :rack_info=\"Rack\" :showLevel=\"false\"></RackStatus>\r\n          </div>\r\n        </div>\r\n      </b-tab>\r\n      <!-- <b-tab v-for=\"Rack in WIPData\" :key=\"Rack.WIPName\" :title=\"Rack.WIPName\">\r\n        <div class=\"rack-container d-flex flex-row justify-content-center border\">\r\n          <RackStatus :rack_info=\"Rack\"></RackStatus>\r\n        </div>\r\n      </b-tab>-->\r\n    </b-tabs>\r\n    <div v-else>\r\n      <div v-for=\"zone in GroupedWipData\" :key=\"zone.zoneName\" class=\"my-2 border\">\r\n        <h3 class=\"bg-dark text-light\">{{ zone.zoneName }}</h3>\r\n        <div class=\"d-flex flex-row\">\r\n          <b>{{ $t('Rack.Cargo_Spaces') }}</b>\r\n          <div class=\"flex-fill\">\r\n            <el-progress\r\n              :stroke-width=\"18\"\r\n              :percentage=\"zone.level\"\r\n              text-inside\r\n              striped\r\n              striped-flow\r\n              :duration=\"500\"\r\n            >\r\n              <span>{{ zone.hasCstPortNum }}/{{ zone.totalPorts }}</span>\r\n            </el-progress>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex flex-row flex-no-wrap overflow-auto\">\r\n          <div v-for=\"Rack in zone.zones\" :key=\"Rack.WIPName\">\r\n            <RackStatus :rack_info=\"Rack\" :showLevel=\"false\"></RackStatus>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport RackStatus from '@/components/RacksStatusView/RackStatus.vue'\r\nimport { EqStore } from '@/store'\r\nexport default {\r\n  components: {\r\n    RackStatus,\r\n  },\r\n  data() {\r\n    return {\r\n      display: 'div'//div\r\n    }\r\n  },\r\n  computed: {\r\n    WIPData() {\r\n      return EqStore.state.WIPsData\r\n    },\r\n    GroupedWipData() {\r\n      const wipDatas = EqStore.state.WIPsData;\r\n\r\n      let GetZoneData = (zoneID) => {\r\n        let rackDatas = wipDatas.filter(rack => rack.DeviceID == zoneID);\r\n        const totalPorts = rackDatas.reduce((sum, rack) => sum + GetRackTotalPorts(rack), 0);\r\n        const hasCstPortNum = rackDatas.reduce((sum, rack) => sum + GetRackHasCstPortNum(rack), 0);\r\n        return {\r\n          zoneName: zoneID,\r\n          zones: rackDatas,\r\n          totalPorts: totalPorts,\r\n          hasCstPortNum: hasCstPortNum,\r\n          level: hasCstPortNum / totalPorts * 100,\r\n        }\r\n      }\r\n\r\n      let GetRackHasCstPortNum = (rackData) => {\r\n        let count = 0;\r\n        for (let i = 0; i < rackData.Ports.length; i++) {\r\n          if (rackData.Ports[i].CargoExist === true) {\r\n            count++;\r\n          }\r\n        }\r\n        return count;\r\n      }\r\n\r\n      let GetRackTotalPorts = (rackData) => {\r\n        return rackData.Rows * rackData.Columns;\r\n      }\r\n\r\n      const deviceIDList = [...new Set(wipDatas.map(rack => rack.DeviceID))];\r\n      return deviceIDList.map(id => GetZoneData(id))\r\n    }\r\n  },\r\n  watch: {\r\n    display(nval) {\r\n      localStorage.setItem('wips-display-mode', nval)\r\n    }\r\n  },\r\n  mounted() {\r\n    var _displayStored = localStorage.getItem('wips-display-mode');\r\n    if (_displayStored) {\r\n      this.display = _displayStored;\r\n    }\r\n  },\r\n  methods: {\r\n    IsHasDataButNoCargo(zoneID) {\r\n      const wip = EqStore.state.HasDataButNoCargoWIPs.find(wip => wip.DeviceID == zoneID);\r\n      return wip != undefined;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.rack-status-view {\r\n  .display-mode-container {\r\n    position: absolute;\r\n    right: 1rem;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"rack-status m-0 p-1\">\r\n    <div class=\"my-1 d-flex flex-row bg-light\">\r\n      <h3 class=\"w-50 text-start px-2\">{{ rack_info.WIPName }}</h3>\r\n      <div class=\"p-1\" v-if=\"showLevel\">\r\n        <b>{{ $t('Rack.Cargo_Spaces') }}</b>\r\n      </div>\r\n      <div class=\"flex-fill p-2\" v-if=\"showLevel\">\r\n        <el-progress\r\n          :stroke-width=\"18\"\r\n          :percentage=\"Level\"\r\n          text-inside\r\n          striped\r\n          striped-flow\r\n          :duration=\"40\"\r\n        >\r\n          <span>{{ this.HasCstPortNum }}/{{ this.TotalPorts }}</span>\r\n        </el-progress>\r\n      </div>\r\n    </div>\r\n    <div class=\"ports-container\">\r\n      <div class=\"d-flex flex-row\" v-for=\"row in RowsArray(rack_info.Rows)\" :key=\"'row-' + row\">\r\n        <div class=\"d-flex flex-column\" v-for=\"col in rack_info.Columns\" :key=\"'col-' + col\">\r\n          <RackPort\r\n            :rack_name=\"rack_info.WIPName\"\r\n            :port_info=\"GetPortByColRow(col - 1, row - 1)\"\r\n            :IsOvenAsRacks=\"rack_info.IsOvenAsRacks\"\r\n          ></RackPort>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport RackPort from './RackPort.vue';\r\nexport default {\r\n  components: {\r\n    RackPort,\r\n  },\r\n  methods: {\r\n    GetPortByColRow(col, row) {\r\n      var _ports = this.rack_info.Ports;\r\n      return _ports.find(port => port.Properties.Row == row && port.Properties.Column == col);\r\n    },\r\n    RowsArray(n) {\r\n      let arr = []\r\n      for (var i = n; i >= 1; i--)\r\n        arr.push(i)\r\n      return arr;\r\n    }\r\n  },\r\n  props: {\r\n    rack_info: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          WIPName: \"Rack-1\",\r\n          Rows: 3,\r\n          Columns: 3,\r\n          ColumnsTagMap: {\r\n            0: [0],\r\n            1: [1],\r\n            2: [2],\r\n          },\r\n          Ports: [\r\n            {\r\n              CargoExist: false,\r\n              CarrierID: null,\r\n              MaterialExistSensorStates: {\r\n                TRAY_1: false,\r\n                TRAY_2: true,\r\n                RACK_1: false,\r\n                RACK_2: false\r\n              },\r\n              InstallTime: \"0001-01-01T00:00:00\",\r\n              Properties: {\r\n                ID: \"0-0\",\r\n                Row: 0,\r\n                Column: 0,\r\n                IOLocation: { Tray_Sensor1: 0, Tray_Sensor2: 1, Box_Sensor1: 2, Box_Sensor2: 3 },\r\n              },\r\n              RackPlacementState: 0,\r\n              TrayPlacementState: 0\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    showLevel: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    TotalPorts() {\r\n      return this.rack_info.Rows * this.rack_info.Columns;\r\n    },\r\n    HasCstPortNum() {\r\n      //統計有貨物的Port數量\r\n      let count = 0;\r\n      for (let i = 0; i < this.rack_info.Ports.length; i++) {\r\n        if (this.rack_info.Ports[i].CargoExist === true) {\r\n          count++;\r\n        }\r\n      }\r\n      return count;\r\n    },\r\n    Level() {\r\n      return this.HasCstPortNum / this.TotalPorts * 100;\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.rack-status {\r\n  border: 2px solid black;\r\n  .ports-container {\r\n    // background-color: black;\r\n    overflow-x: scroll;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"rack-port\" v-bind:class=\"[ProductQualityClassName,UsableStateClass]\">\r\n    <div class=\"bg-light border-bottom d-flex py-1\">\r\n      <span class=\"flex-fill text-start px-1\">\r\n        <label class=\"port-no-display\">{{ PortNameDisplay }}</label>\r\n      </span>\r\n      <div\r\n        v-show=\"AnySensorFlash\"\r\n        class=\"text-danger bg-light w-100 text-start\"\r\n        style=\" max-height: 0;  position: relative;left:3px;top:0px;\"\r\n      >\r\n        <i class=\"bi bi-exclamation\"></i>\r\n        {{\r\n        $t('Rack.Sensor_Flash') }}\r\n      </div>\r\n      <div v-if=\"IsUserLoginAndPermissionAboveOP\" class=\"px-2\">\r\n        <el-switch\r\n          active-text=\"啟用\"\r\n          inactive-text=\"禁用\"\r\n          :active-value=\"1\"\r\n          :inactive-value=\"0\"\r\n          inactive-color=\"rgb(146, 148, 153)\"\r\n          v-model=\"port_info.Properties.PortUsable\"\r\n          :before-change=\"HandlePortUsableSwitchClicked\"\r\n        ></el-switch>\r\n      </div>\r\n      <div v-else>\r\n        <span class=\"text-danger\" v-if=\"port_info.Properties.PortUsable==0\">已禁用</span>\r\n      </div>\r\n      <!-- <div class=\"px-2\" v-if=\"!IsOvenAsRacks\">\r\n        <el-tag\r\n          v-bind:class=\"ProductQualityClassName + ' text-dark'\"\r\n          v-if=\" port_info.Properties.ProductionQualityStore == 0\"\r\n          effect=\"dark\"\r\n        >NORMAL PORT</el-tag>\r\n        <el-tag v-bind:class=\"ProductQualityClassName + ' text-dark'\" v-else effect=\"dark\">NG PORT</el-tag>\r\n      </div>-->\r\n    </div>\r\n    <div class=\"item\">\r\n      <div class=\"title\">Carrier ID</div>\r\n      <div class=\"values d-flex\">\r\n        <el-tag\r\n          size=\"large\"\r\n          effect=\"dark\"\r\n          :type=\"port_info.CarrierID==''?'info':'primary'\"\r\n          style=\"width: 135px; font-weight: bold; letter-spacing: 3px;\"\r\n        >{{ port_info.CarrierID }}</el-tag>\r\n        <el-tooltip placement=\"top-start\" :content=\"$t('Rack.copy')\">\r\n          <i\r\n            v-if=\"port_info.CarrierID != ''\"\r\n            @click=\"CopyText(port_info.CarrierID)\"\r\n            class=\"copy-button copy-icon bi bi-clipboard\"\r\n          ></i>\r\n        </el-tooltip>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"item\"\r\n      v-if=\"!IsOvenAsRacks && port_info.Properties.HasTraySensor && (port_info.Properties.CargoTypeStore == 2 || port_info.Properties.CargoTypeStore == 0)\"\r\n    >\r\n      <div class=\"title\">Exist Sensor(Tray)</div>\r\n      <div class=\"values d-flex\">\r\n        <div\r\n          class=\"exist-sensor round my-1\"\r\n          v-bind:style=\"ExistSensorTray_1 ? ExistSensorOnStyle : ExistSensorOFFStyle\"\r\n          @click=\"HandleExistSensorStateClick('tray', 0)\"\r\n        ></div>\r\n        <div\r\n          class=\"exist-sensor round my-1 mx-3\"\r\n          v-bind:style=\"ExistSensorTray_2 ? ExistSensorOnStyle : ExistSensorOFFStyle\"\r\n          @click=\"HandleExistSensorStateClick('tray', 1)\"\r\n        ></div>\r\n      </div>\r\n      <!-- <div class=\"values\">{{ port_info.CstExist }}</div> -->\r\n    </div>\r\n    <div\r\n      class=\"item\"\r\n      v-if=\"!IsOvenAsRacks && port_info.Properties.HasRackSensor&&( port_info.Properties.CargoTypeStore == 2 || port_info.Properties.CargoTypeStore == 1)\"\r\n    >\r\n      <div class=\"title\">Exist Sensor(Rack)</div>\r\n      <div class=\"values d-flex\">\r\n        <div\r\n          class=\"exist-sensor round my-1\"\r\n          v-bind:style=\"ExistSensorRack_1 ? ExistSensorOnStyle : ExistSensorOFFStyle\"\r\n          @click=\"HandleExistSensorStateClick('rack', 0)\"\r\n        ></div>\r\n        <div\r\n          class=\"exist-sensor round my-1 mx-3\"\r\n          v-bind:style=\"ExistSensorRack_2 ? ExistSensorOnStyle : ExistSensorOFFStyle\"\r\n          @click=\"HandleExistSensorStateClick('rack', 1)\"\r\n        ></div>\r\n      </div>\r\n      <!-- <div class=\"values\">{{ port_info.CstExist }}</div> -->\r\n    </div>\r\n\r\n    <!--  -->\r\n    <div\r\n      class=\"item\"\r\n      v-if=\"!IsOvenAsRacks && port_info.Properties.HasTrayDirectionSensor&&( port_info.Properties.CargoTypeStore == 2 || port_info.Properties.CargoTypeStore == 1)\"\r\n    >\r\n      <div class=\"title\">Tray Direction</div>\r\n      <div class=\"values d-flex\">\r\n        <div\r\n          class=\"exist-sensor round my-1\"\r\n          v-bind:style=\"TrayDirectionSensor ? ExistSensorOnStyle : ExistSensorOFFStyle\"\r\n        ></div>\r\n      </div>\r\n      <!-- <div class=\"values\">{{ port_info.CstExist }}</div> -->\r\n    </div>\r\n\r\n    <!--  -->\r\n    <div class=\"item\" v-if=\"IsOvenAsRacks\">\r\n      <div class=\"title\">貨物在席</div>\r\n      <div class=\"values\">\r\n        <el-tag\r\n          size=\"large\"\r\n          effect=\"dark\"\r\n          :type=\"port_info.CarrierExist?'success':'danger'\"\r\n        >{{port_info.CarrierExist?'有貨':'無貨'}}</el-tag>\r\n      </div>\r\n    </div>\r\n    <div class=\"item\" v-if=\"IsOvenAsRacks\">\r\n      <div class=\"title\">空/實框</div>\r\n      <div class=\"values\">\r\n        <el-radio-group\r\n          :disabled=\"radioGroupDisable\"\r\n          size=\"large\"\r\n          v-model=\"port_info.RackContentState\"\r\n          fill=\"rgb(8, 87, 60)\"\r\n        >\r\n          <el-radio-button @click=\"EmptyContentClick\" :value=\"0\" label=\"空框\"></el-radio-button>\r\n          <el-radio-button @click=\"FullContentClick\" :value=\"1\" label=\"實框\"></el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n    </div>\r\n    <div class=\"item\" v-if=\"false\">\r\n      <div class=\"title\">Install Priority</div>\r\n      <div class=\"values\">\r\n        <el-input type=\"text\" size=\"small\" v-model=\"port_info.Properties.StoragePriority\"></el-input>\r\n      </div>\r\n    </div>\r\n    <div class=\"item\">\r\n      <div class=\"title\">Install Time</div>\r\n      <div class=\"values\">{{ port_info.InstallTime }}</div>\r\n    </div>\r\n    <!-- <div class=\"item\">\r\n      <div class=\"title\"></div>\r\n      <div class=\"values\">BBB</div>\r\n    </div>-->\r\n    <div class=\"item justify-content-center\">\r\n      <div v-if=\"IsCarrierIDExist\" class=\"w-100 d-flex justify-content-center\">\r\n        <el-button ref=\"modify_btn\" @click=\"CstIDEditHandle\" type=\"success\">{{ $t('Rack.Edit_ID') }}</el-button>\r\n        <el-button @click=\"RemoveCSTID\" type=\"danger\">{{ $t('Rack.Remove_ID') }}</el-button>\r\n      </div>\r\n      <el-button v-else @click=\"CstIDEditHandle\" class=\"m-1\" type=\"info\">{{ $t('Rack.Creat_ID') }}</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Clipboard from 'clipboard'\r\nimport { ElNotification, ElMessage, ElMessageBox } from 'element-plus'\r\nimport { ModifyCargoID, RemoveCargoID, PortUsableSwitch } from '@/api/WIPAPI.js'\r\nimport { userStore } from '@/store'\r\nimport { RackEmuAPI, SetToFullRackStatusByEqTag, SetToEmptyRackStatusByEqTag } from '@/api/EquipmentAPI'\r\nimport { EqStore } from '@/store'\r\nimport bus from '@/event-bus'\r\nexport default {\r\n  props: {\r\n    rack_name: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    port_info: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          CargoExist: false,\r\n          CarrierID: null,\r\n          SensorStates: {\r\n            TRAY_1: false,\r\n            TRAY_2: true,\r\n            RACK_1: false,\r\n            RACK_2: false,\r\n            TRAY_DIRECTION: false\r\n          },\r\n          InstallTime: \"0001-01-01T00:00:00\",\r\n          Properties: {\r\n            ID: \"0-0\",\r\n            Row: 0,\r\n            Column: 0,\r\n            PortNo: '',\r\n            PortUsable: 0,\r\n            ProductionQualityStore: 0,//0: ok | 1: ng\r\n            CargoTypeStore: 2, // 0:tray | 1:Rack| 2:Mixed\r\n            IOLocation: { Tray_Sensor1: 0, Tray_Sensor2: 1, Box_Sensor1: 2, Box_Sensor2: 3 },\r\n            StoragePriority: 0, //數字愈大優先度愈高\r\n            HasTrayDirectionSensor: false,\r\n            HasTraySensor: true,\r\n            HasRackSensor: true,\r\n          },\r\n          RackPlacementState: 0,\r\n          TrayPlacementState: 0\r\n        }\r\n      }\r\n    },\r\n    IsOvenAsRacks: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ExistSensorOnStyle: {\r\n        backgroundColor: 'lime'\r\n      },\r\n      ExistSensorOFFStyle: {\r\n        backgroundColor: 'rgb(180, 183, 191)'\r\n      },\r\n      selectedRackContentType: '',\r\n      radioGroupDisable: false,\r\n    }\r\n  },\r\n  computed: {\r\n    IsUserLoginAndPermissionAboveOP() {\r\n      return userStore.state.user.Role > 0;\r\n    },\r\n    ProductQualityClassName() {\r\n      if (this.IsOvenAsRacks)\r\n        return 'oven-port'\r\n      if (this.port_info.CargoExist && this.port_info.CarrierID)\r\n        return 'has-cst-port'\r\n      if (!this.port_info.CargoExist && this.port_info.CarrierID) //有帳籍但無貨\r\n        return 'has-data-but-no-cargo-port'\r\n\r\n      if (this.port_info.CargoExist && !this.port_info.CarrierID) //有貨但無帳籍\r\n        return 'has-cargo-but-no-cst-port'\r\n      return 'empty-port'\r\n    },\r\n    UsableStateClass() {\r\n      return this.port_info.Properties.PortUsable == 1 ? 'port-usable' : 'port-not-usable';\r\n    },\r\n    PortNameDisplay() {\r\n      return `${this.port_info.PortNo}`\r\n      // return `${this.port_info.NickName} | ${this.port_info.Properties.ID}`\r\n    },\r\n    IsCarrierIDExist() {\r\n      return this.port_info.CarrierID && this.port_info.CarrierID != '';\r\n    },\r\n    ModifyButtonText() {\r\n      return !this.IsCarrierIDExist ? '新增帳籍' : '修改帳籍';\r\n    },\r\n    ExistSensorTray_1() { return this.port_info.MaterialExistSensorStates[\"TRAY_1\"] != 0; },\r\n    ExistSensorTray_2() { return this.port_info.MaterialExistSensorStates[\"TRAY_2\"] != 0; },\r\n    ExistSensorRack_1() { return this.port_info.MaterialExistSensorStates[\"RACK_1\"] != 0; },\r\n    ExistSensorRack_2() { return this.port_info.MaterialExistSensorStates[\"RACK_2\"] != 0; },\r\n    TrayDirectionSensor() { return this.port_info.SensorStates[\"TRAY_DIRECTION\"] != 0; },\r\n    AnySensorFlash() {\r\n      var states = Object.values(this.port_info.MaterialExistSensorStates)\r\n      var flashs = states.filter(sta => sta == 2);\r\n      return flashs.length != 0;\r\n    },\r\n    IsDeveloperLogining() {\r\n      return userStore.getters.IsDeveloperLogining;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async HandleExistSensorStateClick(cargoType = 'tray|rack', number = 0 | 1) {\r\n      // alert(`${cargoType}-${number}`)\r\n      if (!this.IsDeveloperLogining)\r\n        return;\r\n\r\n      var response = await RackEmuAPI.SetSensorState(this.rack_name, this.port_info.Properties.ID, cargoType, number, false);\r\n      if (!response.confirm)\r\n        this.$swal.fire(\r\n          {\r\n            text: '',\r\n            title: `${response.message}`,\r\n            icon: 'info',\r\n            showCancelButton: false,\r\n            confirmButtonText: 'OK',\r\n            customClass: 'my-sweetalert'\r\n          })\r\n    },\r\n    CstIDEditHandle() {\r\n      ElMessageBox.prompt('Carrier ID', {\r\n        title: `${this.ModifyButtonText} : ${this.PortNameDisplay}`,\r\n        draggable: true,\r\n        inputValue: this.port_info.CarrierID,\r\n        type: 'warning',\r\n        // cancelButtonClass: 'bg-danger text-light rounded',\r\n        confirmButtonText: '修改',\r\n        inputErrorMessage: '帳籍ID不得為空',\r\n        inputPlaceholder: '請輸入ID',\r\n        inputValidator: (_input) => {\r\n          return _input != '';\r\n        }\r\n      }).then(async (msg_data) => {\r\n        console.info(msg_data)\r\n        var _newid = !msg_data.value ? \"\" : msg_data.value;\r\n        let result = await ModifyCargoID(this.rack_name, this.port_info.Properties.ID, _newid)\r\n        if (result.confirm)\r\n          this.$message({ message: '帳籍已修改。', type: 'success' })\r\n        else\r\n          this.$swal.fire(\r\n            {\r\n              text: result.message,\r\n              title: '',\r\n              icon: 'error',\r\n              showCancelButton: false,\r\n              confirmButtonText: 'OK',\r\n              customClass: 'my-sweetalert'\r\n            })\r\n        // this.port_info.CarrierID = msg_data.value\r\n      }).catch(() => {\r\n\r\n      })\r\n    },\r\n    RemoveCSTID() {\r\n      this.$swal.fire(\r\n        {\r\n          text: `確定要移除帳籍-[${this.port_info.CarrierID}] ?`,\r\n          title: '移除帳籍確認',\r\n          icon: 'question',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'OK',\r\n          customClass: 'my-sweetalert'\r\n        }).then(async (res) => {\r\n          if (res.isConfirmed) {\r\n            let result = await RemoveCargoID(this.rack_name, this.port_info.Properties.ID);\r\n            if (result.confirm)\r\n              this.$message({ message: '帳籍已移除。' })\r\n            else\r\n              this.$swal.fire(\r\n                {\r\n                  text: result.message,\r\n                  title: '',\r\n                  icon: 'error',\r\n                  showCancelButton: false,\r\n                  confirmButtonText: 'OK',\r\n                  customClass: 'my-sweetalert'\r\n                })\r\n          }\r\n        })\r\n    },\r\n    CopyText(text) {\r\n      const clipboard = new Clipboard('.copy-button', {\r\n        text: () => text\r\n      });\r\n      clipboard.on('success', () => {\r\n        ElNotification({\r\n          title: text,\r\n          message: \"已複製到剪貼簿\",\r\n          duration: 1500\r\n        })\r\n        clipboard.destroy();\r\n      });\r\n\r\n      clipboard.on('error', () => {\r\n        clipboard.destroy();\r\n      });\r\n    },\r\n    async EmptyContentClick() {\r\n      this.radioGroupDisable = true;\r\n      await SetToEmptyRackStatusByEqTag(this.port_info.TagNumbers[0], true)\r\n      await SetToFullRackStatusByEqTag(this.port_info.TagNumbers[0], false)\r\n      this.radioGroupDisable = false;\r\n    },\r\n    async FullContentClick() {\r\n      this.radioGroupDisable = true;\r\n      await SetToFullRackStatusByEqTag(this.port_info.TagNumbers[0], true)\r\n      await SetToEmptyRackStatusByEqTag(this.port_info.TagNumbers[0], false)\r\n      this.radioGroupDisable = false;\r\n    },\r\n    async HandlePortUsableSwitchClicked() {\r\n      setTimeout(async () => {\r\n        const nameDisplay = `${this.rack_name}-${this.port_info.PortNo}`\r\n        const switchToUsable = this.port_info.Properties.PortUsable != 1;\r\n        const response = await PortUsableSwitch(this.rack_name, this.port_info.Properties.ID, switchToUsable);\r\n        if (response.confirm) {\r\n          bus.emit('home-reload-request', 'rack-port-usable-changed')\r\n          ElNotification({\r\n            title: '成功',\r\n            message: switchToUsable ? `${nameDisplay}已啟用` : `${nameDisplay}已停用`,\r\n            type: 'success',\r\n            duration: 1500\r\n          })\r\n        } else {\r\n          this.$swal.fire({\r\n            text: response.message,\r\n            title: `切換${nameDisplay} ${switchToUsable ? '啟用' : '禁用'}失敗`,\r\n            icon: 'error',\r\n            showCancelButton: false,\r\n            confirmButtonText: 'OK',\r\n            customClass: 'my-sweetalert'\r\n          })\r\n        }\r\n      }, 300);\r\n      return false;\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.rack-port {\r\n  width: 360px;\r\n  height: 260px;\r\n  //   background-color: rgb(236, 236, 236);\r\n  border: 3px solid rgb(0, 0, 0);\r\n  margin: 2px;\r\n  .item {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0px;\r\n    padding: 3px;\r\n    border-block: 1px dashed grey;\r\n\r\n    .title {\r\n      font-size: 14px;\r\n      width: 40%;\r\n      font-weight: bold;\r\n      padding: 3px;\r\n      text-align: start;\r\n    }\r\n\r\n    .values {\r\n      text-align: center;\r\n      text-align: center;\r\n    }\r\n\r\n    .exist-sensor {\r\n      width: 15px;\r\n      height: 15px;\r\n      border: 2px solid grey;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .port-no-display {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(0, 0, 0);\r\n    border-radius: 5px;\r\n    padding: 2px 10px;\r\n    letter-spacing: 3px;\r\n  }\r\n}\r\n.rack-port:hover {\r\n  border: 5px solid rgb(51, 51, 51);\r\n  border-radius: 8px;\r\n}\r\n.ok-port {\r\n  font-weight: bold;\r\n  background: rgb(255, 255, 255);\r\n}\r\n.has-data-but-no-cargo-port,\r\n.has-cargo-but-no-cst-port {\r\n  background: rgb(255, 62, 62);\r\n  color: rgb(255, 255, 255);\r\n}\r\n\r\n.has-cst-port {\r\n  background: rgb(61, 61, 61);\r\n  color: rgb(255, 255, 255);\r\n}\r\n.empty-port {\r\n  background: rgb(255, 255, 255);\r\n}\r\n.ng-port {\r\n  background: rgb(255, 196, 196);\r\n}\r\n.oven-port {\r\n  background-color: rgb(213, 213, 213);\r\n  color: black;\r\n}\r\n.port-not-usable {\r\n  border: 6px solid red;\r\n}\r\n</style>","import { render } from \"./RackPort.vue?vue&type=template&id=73b67b69&scoped=true\"\nimport script from \"./RackPort.vue?vue&type=script&lang=js\"\nexport * from \"./RackPort.vue?vue&type=script&lang=js\"\n\nimport \"./RackPort.vue?vue&type=style&index=0&id=73b67b69&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73b67b69\"]])\n\nexport default __exports__","import { render } from \"./RackStatus.vue?vue&type=template&id=56a68298&scoped=true\"\nimport script from \"./RackStatus.vue?vue&type=script&lang=js\"\nexport * from \"./RackStatus.vue?vue&type=script&lang=js\"\n\nimport \"./RackStatus.vue?vue&type=style&index=0&id=56a68298&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a68298\"]])\n\nexport default __exports__","import { render } from \"./RacksStatusView.vue?vue&type=template&id=54e1ef2b\"\nimport script from \"./RacksStatusView.vue?vue&type=script&lang=js\"\nexport * from \"./RacksStatusView.vue?vue&type=script&lang=js\"\n\nimport \"./RacksStatusView.vue?vue&type=style&index=0&id=54e1ef2b&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_select","$data","display","$event","style","_component_el_option","label","value","_createBlock","_component_b_tabs","key","_Fragment","_renderList","$options","GroupedWipData","zone","_component_b_tab","zoneName","title","_withCtx","_toDisplayString","_component_el_badge","type","IsHasDataButNoCargo","_hoisted_4","_ctx","$t","_hoisted_5","_component_el_progress","percentage","level","striped","duration","hasCstPortNum","totalPorts","_hoisted_6","zones","Rack","WIPName","_component_RackStatus","rack_info","showLevel","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","$props","Level","HasCstPortNum","TotalPorts","RowsArray","Rows","row","Columns","col","_component_RackPort","rack_name","port_info","GetPortByColRow","IsOvenAsRacks","_normalizeClass","ProductQualityClassName","UsableStateClass","PortNameDisplay","AnySensorFlash","IsUserLoginAndPermissionAboveOP","_component_el_switch","Properties","PortUsable","HandlePortUsableSwitchClicked","_component_el_tag","size","effect","CarrierID","_component_el_tooltip","placement","content","onClick","_cache","CopyText","HasTraySensor","CargoTypeStore","_hoisted_12","_hoisted_13","_hoisted_14","_normalizeStyle","ExistSensorTray_1","ExistSensorOnStyle","ExistSensorOFFStyle","HandleExistSensorStateClick","ExistSensorTray_2","HasRackSensor","_hoisted_15","_hoisted_16","_hoisted_17","ExistSensorRack_1","ExistSensorRack_2","HasTrayDirectionSensor","_hoisted_18","_hoisted_19","_hoisted_20","TrayDirectionSensor","_hoisted_21","_hoisted_22","_hoisted_23","CarrierExist","_hoisted_24","_hoisted_25","_hoisted_26","_component_el_radio_group","disabled","radioGroupDisable","RackContentState","fill","_component_el_radio_button","EmptyContentClick","FullContentClick","_hoisted_30","_hoisted_31","_hoisted_32","InstallTime","_hoisted_33","IsCarrierIDExist","_hoisted_34","_component_el_button","ref","CstIDEditHandle","RemoveCSTID","props","String","default","Object","CargoExist","SensorStates","TRAY_1","TRAY_2","RACK_1","RACK_2","TRAY_DIRECTION","ID","Row","Column","PortNo","ProductionQualityStore","IOLocation","Tray_Sensor1","Tray_Sensor2","Box_Sensor1","Box_Sensor2","StoragePriority","RackPlacementState","TrayPlacementState","Boolean","data","backgroundColor","selectedRackContentType","computed","userStore","state","user","Role","this","ModifyButtonText","MaterialExistSensorStates","states","values","flashs","filter","sta","length","IsDeveloperLogining","getters","methods","async","cargoType","number","response","RackEmuAPI","SetSensorState","confirm","$swal","fire","text","message","icon","showCancelButton","confirmButtonText","customClass","ElMessageBox","prompt","draggable","inputValue","inputErrorMessage","inputPlaceholder","inputValidator","_input","then","console","info","msg_data","_newid","result","ModifyCargoID","$message","catch","res","isConfirmed","RemoveCargoID","clipboard","Clipboard","on","ElNotification","destroy","SetToEmptyRackStatusByEqTag","TagNumbers","SetToFullRackStatusByEqTag","setTimeout","nameDisplay","switchToUsable","PortUsableSwitch","bus","emit","__exports__","components","RackPort","_ports","Ports","find","port","n","arr","i","push","ColumnsTagMap","count","RackStatus","WIPData","EqStore","WIPsData","wipDatas","GetZoneData","zoneID","rackDatas","rack","DeviceID","reduce","sum","GetRackTotalPorts","GetRackHasCstPortNum","rackData","deviceIDList","Set","map","id","watch","nval","localStorage","setItem","mounted","_displayStored","getItem","wip","HasDataButNoCargoWIPs","undefined","render"],"sourceRoot":""}