{"version":3,"file":"js/811.2911a5cf.js","mappings":"qLAESA,MAAM,iB,GACTC,EAAAA,EAAAA,GAAsB,aAAf,WAAO,G,GAQdA,EAAAA,EAAAA,GAAmB,aAAZ,QAAI,G,GASXA,EAAAA,EAAAA,GAAqB,aAAd,UAAM,G,0FAnBjBC,EAAAA,EAAAA,IAuCM,aAtCJD,EAAAA,EAAAA,GA2BM,MA3BNE,EA2BM,CA1BJC,GACAC,EAAAA,EAAAA,IAMEC,EAAA,C,WALSC,EAAAC,yBAAyBC,Q,qCAAzBF,EAAAC,yBAAyBC,QAAOC,GACxCC,IAAK,EACLC,IAAK,EACLC,KAAM,IACPC,KAAK,S,uBAEPC,GACAV,EAAAA,EAAAA,IAOEC,EAAA,C,WANSC,EAAAC,yBAAyBQ,K,qCAAzBT,EAAAC,yBAAyBQ,KAAIN,GACrCC,IAAK,EACLC,IAAK,GACLC,KAAM,EACPC,KAAK,QACJG,QAAOC,EAAAC,gC,iCAEVC,GACAf,EAAAA,EAAAA,IAOEC,EAAA,C,WANSC,EAAAC,yBAAyBa,O,qCAAzBd,EAAAC,yBAAyBa,OAAMX,GACvCC,IAAK,EACLC,IAAK,GACLC,KAAM,EACPC,KAAK,QACJG,QAAOC,EAAAC,gC,oCAGZd,EAAAA,EAAAA,IASOiB,EAAA,CARLtB,MAAM,kBACNuB,IAAI,MACJC,GAAG,cACFC,UAAU,EACVC,UAAU,EACVC,cAAc,EACdC,cAAc,EACdC,sBAAsB,G,iGCnCzBC,EAAeC,IAAAA,OAAa,CAC9BC,QAASC,EAAAA,EAAMC,aACfC,QAAS,CACP,eAAiBC,EAAAA,EAAAA,SAGd,MAAMC,EACXC,cACEC,KAAKC,IAAM,EACXD,KAAKE,aAAe,CAAC,EAAG,GACxBF,KAAKG,SAAW,EAChBH,KAAKI,mBAAqB,CAC5B,EAQKC,eAAeC,EAAoBC,EAAYC,GACpD,IAAIC,QAAYlB,EAAamB,IAAK,sDAAqDH,aAAsBC,KAC7G,IAAIG,EAAS,CAAC,IAAIb,GAElB,OADAc,EAAEC,MAAMF,EAAQF,EAAIK,MACbH,CACT,CDqBA,OACEG,OACE,MAAO,CACL7C,yBAA0B,CACxBC,QAAS,EACTO,KAAM,GACNK,OAAQ,IAGd,EACAiC,WAAY,CACVC,IAAGA,EAAAA,YAELC,SAAU,CACRC,MACE,OAAOlB,KAAKmB,MAAMD,GACpB,EACAE,oBACE,OAAOpB,KAAKkB,IAAIG,iBAClB,GAEFC,QAAS,CACP1C,iCACEoB,KAAKoB,kBAAkBG,IAAI,SAAUvB,KAAK/B,yBAAyBa,QACnEkB,KAAKoB,kBAAkBG,IAAI,OAAQvB,KAAK/B,yBAAyBQ,MACjEuB,KAAKoB,kBAAkBG,IAAI,UAAWvB,KAAK/B,yBAAyBC,QACtE,EACAsD,wBAAwBC,EAA8B,IACpDzB,KAAKoB,kBAAkBM,YAAYC,QACnC3B,KAAKoB,kBAAkBM,YAAYE,YAAYH,EACjD,EACApB,gBACE,IAAIwB,EAAM,IAAIC,KACVC,EAAe,EACnBF,EAAIG,SAASH,EAAII,WAAaF,GAC9B,IAAIG,EAAc,IAAIJ,KAAKD,EAAIM,UAAa,QACxCrB,QAAaR,EAAoB4B,EAAYE,cAAeP,EAAIO,eAChEX,EAA8B,GAClCX,EAAKI,KAAImB,IACP,IAAIC,EAAiB,IAAIC,EAAAA,EAAQ,CAC/BC,SAAU,IAAIC,EAAAA,EAAMJ,EAAKnC,cACzBwC,OAAQL,EAAKjC,qBAEfqB,EAA4BkB,KAAKL,EAAe,IAElDtC,KAAKwB,wBAAwBC,EAC/B,GAEFmB,UACE5C,KAAK6C,UACL7C,KAAKoB,kBAAkBG,IAAI,SAAUvB,KAAK/B,yBAAyBa,QACnEkB,KAAKoB,kBAAkBG,IAAI,OAAQvB,KAAK/B,yBAAyBQ,MACjEuB,KAAKoB,kBAAkBG,IAAI,UAAWvB,KAAK/B,yBAAyBC,SACpE8B,KAAKoB,kBAAkBG,IAAI,WAAY,CACrC,qBACA,qBACA,uBACA,sBAEJ,G,WErGF,MAAMuB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://gpm_agvs/./src/components/DataView/TrafficState.vue","webpack://gpm_agvs/./src/api/TrafficStateQueryAPI.js","webpack://gpm_agvs/./src/components/DataView/TrafficState.vue?d1de"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"layer-control\">\r\n      <label>Opacity</label>\r\n      <el-slider\r\n        v-model=\"trafficStateLayerOptions.opacity\"\r\n        :min=\"0\"\r\n        :max=\"1\"\r\n        :step=\"0.01\"\r\n        size=\"small\"\r\n      />\r\n      <label>Blur</label>\r\n      <el-slider\r\n        v-model=\"trafficStateLayerOptions.blur\"\r\n        :min=\"0\"\r\n        :max=\"50\"\r\n        :step=\"1\"\r\n        size=\"small\"\r\n        @input=\"UpdateTrafficStateLayerOptions\"\r\n      />\r\n      <label>Radius</label>\r\n      <el-slider\r\n        v-model=\"trafficStateLayerOptions.radius\"\r\n        :min=\"1\"\r\n        :max=\"50\"\r\n        :step=\"1\"\r\n        size=\"small\"\r\n        @input=\"UpdateTrafficStateLayerOptions\"\r\n      />\r\n    </div>\r\n    <Map\r\n      class=\"bg-light border\"\r\n      ref=\"map\"\r\n      id=\"traffic_map\"\r\n      :editable=\"false\"\r\n      :agv_show=\"false\"\r\n      :station_show=\"true\"\r\n      :rackInfoShow=\"false\"\r\n      :eq_lduld_status_show=\"false\"\r\n    ></Map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Map from '@/components/Map/Map.vue'\r\nimport { Feature } from 'ol'\r\nimport { Point } from 'ol/geom.js';\r\nimport { GetTrafficStateData } from '@/api/TrafficStateQueryAPI'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      trafficStateLayerOptions: {\r\n        opacity: 1,\r\n        blur: 25,\r\n        radius: 15\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    Map\r\n  },\r\n  computed: {\r\n    map() {\r\n      return this.$refs.map;\r\n    },\r\n    trafficStateLayer() {\r\n      return this.map.TrafficStateLayer;\r\n    }\r\n  },\r\n  methods: {\r\n    UpdateTrafficStateLayerOptions() {\r\n      this.trafficStateLayer.set('radius', this.trafficStateLayerOptions.radius);\r\n      this.trafficStateLayer.set('blur', this.trafficStateLayerOptions.blur);\r\n      this.trafficStateLayer.set('opacity', this.trafficStateLayerOptions.opacity);\r\n    },\r\n    UpdateTrafficStateLayer(traffic_state_data_features = []) {\r\n      this.trafficStateLayer.getSource().clear();\r\n      this.trafficStateLayer.getSource().addFeatures(traffic_state_data_features);\r\n    },\r\n    async Example() {\r\n      let now = new Date();\r\n      let taipeiOffset = 8; // UTC+8 for Taipei\r\n      now.setHours(now.getHours() + taipeiOffset);\r\n      let twoHoursAgo = new Date(now.getTime() - (30 * 24 * 60 * 60 * 1000));\r\n      let data = await GetTrafficStateData(twoHoursAgo.toISOString(), now.toISOString());\r\n      let traffic_state_data_features = []\r\n      data.map(item => {\r\n        var trafficFeature = new Feature({\r\n          geometry: new Point(item.Coordination),\r\n          weight: item.DurationNormalized\r\n        })\r\n        traffic_state_data_features.push(trafficFeature)\r\n      })\r\n      this.UpdateTrafficStateLayer(traffic_state_data_features);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.Example();\r\n    this.trafficStateLayer.set('radius', this.trafficStateLayerOptions.radius);\r\n    this.trafficStateLayer.set('blur', this.trafficStateLayerOptions.blur);\r\n    this.trafficStateLayer.set('opacity', this.trafficStateLayerOptions.opacity);\r\n    this.trafficStateLayer.set('gradient', [\r\n      'rgba(0, 0, 255, 0)',\r\n      'rgba(0, 255, 0, 1)',\r\n      'rgba(255, 255, 0, 1)',\r\n      'rgba(255, 0, 0, 1)'\r\n    ]);\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.layer-control {\r\n  width: 150px;\r\n  position: fixed;\r\n  bottom: 51px;\r\n  right: 135px;\r\n  z-index: 1000;\r\n  background-color: #ffffff80;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #3f3f3f47;\r\n}\r\n</style>","import axios from 'axios'\r\nimport param from '@/gpm_param'\r\nimport { getAuthHeaders, getJWTAuthorizationVal } from './AuthHelper'\r\nvar axios_entity = axios.create({\r\n  baseURL: param.backend_host,\r\n  headers: {\r\n    'Authorization': getJWTAuthorizationVal()\r\n  }\r\n})\r\nexport class PointStayState {\r\n  constructor() {\r\n    this.Tag = 0;\r\n    this.Coordination = [0, 0];\r\n    this.Duration = 0;\r\n    this.DurationNormalized = 0;\r\n  }\r\n}\r\n/**\r\n * 取得交通狀態資料\r\n * @param {String} start_time \r\n * @param {String} end_time \r\n * @returns {Array<PointStayState>}\r\n */\r\nexport async function GetTrafficStateData(start_time, end_time) {\r\n  var ret = await axios_entity.get(`/api/TrafficStateData/PointStayStateData?StartTime=${start_time}&EndTime=${end_time}`)\r\n  let result = [new PointStayState()]\r\n  _.merge(result, ret.data)\r\n  return result\r\n}\r\n\r\n","import { render } from \"./TrafficState.vue?vue&type=template&id=343cec83\"\nimport script from \"./TrafficState.vue?vue&type=script&lang=js\"\nexport * from \"./TrafficState.vue?vue&type=script&lang=js\"\n\nimport \"./TrafficState.vue?vue&type=style&index=0&id=343cec83&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_el_slider","$data","trafficStateLayerOptions","opacity","$event","min","max","step","size","_hoisted_3","blur","onInput","$options","UpdateTrafficStateLayerOptions","_hoisted_4","radius","_component_Map","ref","id","editable","agv_show","station_show","rackInfoShow","eq_lduld_status_show","axios_entity","axios","baseURL","param","backend_host","headers","getJWTAuthorizationVal","PointStayState","constructor","this","Tag","Coordination","Duration","DurationNormalized","async","GetTrafficStateData","start_time","end_time","ret","get","result","_","merge","data","components","Map","computed","map","$refs","trafficStateLayer","TrafficStateLayer","methods","set","UpdateTrafficStateLayer","traffic_state_data_features","getSource","clear","addFeatures","now","Date","taipeiOffset","setHours","getHours","twoHoursAgo","getTime","toISOString","item","trafficFeature","Feature","geometry","Point","weight","push","mounted","Example","__exports__","render"],"sourceRoot":""}